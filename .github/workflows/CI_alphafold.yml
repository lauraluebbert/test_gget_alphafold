name: CI_alphafold

on:
  schedule:
    - cron: "0 16 * * 1,4"
  push:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11']

    env:
      TF_CPP_MIN_LOG_LEVEL: "2"
      TF_ENABLE_ONEDNN_OPTS: "0"
      JAX_PLATFORMS: "cpu"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v4
        name: Configure pip cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}
            ${{ runner.os }}-pip-

      # If your requirements.txt already installs everything (jupyter, gget, etc.), keep this.
      # Otherwise, add explicit packages needed to run the notebook.
      - name: Install Python dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt

      # (Optional) to guarantee specific runtime libs are present:
      # - name: Install runtime (OpenMM/JAX/TF) pinned combo
      #   run: |
      #     python -m pip install "openmm>=8,<9" "numpy==1.24.*" "scipy" "jax==0.4.26" "jaxlib==0.4.26" "tensorflow-cpu>=2.17,<2.18" "ml-collections>=0.1,<1"

      - name: Execute notebook
        run: |
          jupyter nbconvert \
            --to notebook \
            --execute \
            --ExecutePreprocessor.timeout=-1 \
            --output executed.ipynb \
            test_gget_alphafold.ipynb
          jupyter nbconvert --to html executed.ipynb
          mv executed.html test_gget_alphafold.html

      - name: Commit and push new data
        run: |
          git config user.name "Test gget alphafold"
          git config user.email ""
          git add test_gget_alphafold.html || true
          timestamp=$(date -u)
          git commit -m "Latest test: ${timestamp}" || exit 0
          git push

      - name: Clean up
        run: rm -f test_gget_alphafold.html executed.ipynb
